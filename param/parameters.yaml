# **********************Algorithm parameters*****************
#  A flag for the mode (true = manual; false = dynamic). Manual for static map or dynamic for dynamic map.
manual : true
#  A flag for the visualization of 3D nodes (true = on; false = off)
visualization : true
#  A flag for the visualization of 2D nodes (true = on; false = off)
visualization2D : true 


#  A flag to toggle reversing (true = on; false = off)
reverse : false
# number of direction to create successor for A-star algorithm
possible_direction : 8

enable_collision_lookup: false
# number of successors for hybrid a star
# TODO make this parameter determine itself, 5 is best for map slalom
number_of_successors: 3
# for heuristic in hybrid a, use dubins or reedshepp or cubic bezier
# 0: dubins curve, 1: reedsshepp curve 2: cubic bezier
curve_type : 2
# step size to create successor
step_size : 1

adaptive_steering_angle_and_step_size: false

# this parameter forces all step size larger than one
make_step_size_larger_than_one: true

add_one_more_successor : true

add_one_more_successor_only_in_free_angle_range: true

# while this parameter is true, it will add four boundary obstacle to obstacle list
map_boundary_obstacle: true
# this parameter control how to generate steering angle in obstacle angle range
steering_angle_towards_free_angle_range_for_obstacle_angle_range: true
# if this is true, 
#   then use number of successors to select steering angle in free angle angle:
# else:
#   use a fixed step size, so steering angle should be: free angle start, free angle start+ n*step_size(step size should be 5 deg).
fixed_number_of_steering_angle_in_free_angle_range: true

analytical_expansion: true
# this parameter determine the frequency of analytical expansion, false means the way in the original paper
analytical_expansion_every_point : true

piecewise_cubic_bezier_interpolation: false

consider_steering_angle_range_for_obstacle_density: false

#  COLLISION LOOKUP SPECIFIC
# [#] --- The sqrt of the number of discrete positions per cell
position_resolution : 2
# **********************vehicle parameters*****************
# [m] --- Uniformly adds a padding around the vehicle
bloating : 0
# [m] --- The width of the vehicle
vehicle_width : 1
# [m] --- The length of the vehicle
vehicle_length : 2
# smooth the path or not
smooth : false 
# [degree] --- max steering angle in degree
max_steering_angle: 30
# **********************Search parameters*****************
#   \brief [m] --- The tie breaker breaks ties between nodes expanded in the same cell

#   As the cost-so-far are bigger than the cost-to-come it is reasonable to believe that the algorithm would prefer the predecessor rather than the successor.
#   This would lead to the fact that the successor would never be placed and the the one cell could only expand one node. The tieBreaker artificially increases the cost of the predecessor to allow the successor being placed in the same cell.
# */
tie_breaker : 0.01
# range for goal test
goal_range: 0.2
# [#] --- A movement cost penalty for turning (choosing non straight motion primitives)
penalty_turning : 1.05
# [#] --- A movement cost penalty for reversing (choosing motion primitives > 2)
penalty_reverse : 1.2
# [#] --- A movement cost penalty for change of direction (changing from primitives < 3 to primitives > 2)
penalty_change_of_direction : 1.1
# steering angle, unit is deg
steering_angle: 8

# [m] --- The step size for the analytical solution (Dubin's shot) primarily relevant for collision checking
curve_step_size : 1

#  [m] --- The number of discretizations in heading
headings : 72
#  [m] --- The cell size of the 2D grid of the world
cell_size : 1

# **********************Smoother parameters*****************
max_iterations : 100000
#  the small number which will terminate loop if path difference smaller than this number.
epsilon : 1.0e-2
#maximum possible curvature of the non-holonomic vehicle
min_turning_radius : 7
#maximum distance to obstacles that is penalized
obsd_max : 2
# maximum distance for obstacles to influence the voronoi field
vor_obs_dmax : 2
#falloff rate for the voronoi field
alpha: 0.1
# weight for the obstacle term
weight_obstacle : 1
# weight for the voronoi term
weight_voronoi : 0.2
# weight for the curvature term
weight_curvature : 0
# weight for the smoothness term
weight_smoothness : 0.2
#weight for path length
weight_length : 0.2

# **********************rrt parameters*****************
use_rrt: false

float possibility_to_goal: 0.5

adaptive_step_size: false

consider_orientation: false

