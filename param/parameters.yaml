# **********************Algorithm parameters*****************
#  A flag for the mode (true = manual; false = dynamic). Manual for static map or dynamic for dynamic map.
manual : true
#  A flag for the visualization of 3D nodes (true = on; false = off)
visualization : true
#  A flag for the visualization of 2D nodes (true = on; false = off)
visualization2D : true 
#  A flag to toggle reversing (true = on; false = off)
reverse : false
# number of direction to create successor for A-star algorithm
possible_direction : 8

enable_collision_lookup: false
# number of successors for hybrid a star
number_of_successors: 1
# for heuristic in hybrid a, use dubins or reedshepp or cubic bezier
# 0: dubins curve, 1: reedsshepp curve 2: cubic bezier
curve_type : 2
free_step_size: 4
# obstacle_detection_range: 10
analytical_expansion: true
# adaptive_steering_angle: false
# adaptive_step_size : false
adaptive_steering_angle_and_step_size: true
add_one_more_successor: false  

piecewise_cubic_bezier_interpolation: false
# step size for create successor
# step_size: 1
#  COLLISION LOOKUP SPECIFIC
# [#] --- The sqrt of the number of discrete positions per cell
position_resolution : 2
# **********************vehicle parameters*****************
# [m] --- Uniformly adds a padding around the vehicle
bloating : 0
# [m] --- The width of the vehicle
vehicle_width : 1.75 
# [m] --- The length of the vehicle
vehicle_length : 2.65 
# smooth the path or not
smooth : false 
# **********************Search parameters*****************
#   \brief [m] --- The tie breaker breaks ties between nodes expanded in the same cell

#   As the cost-so-far are bigger than the cost-to-come it is reasonable to believe that the algorithm would prefer the predecessor rather than the successor.
#   This would lead to the fact that the successor would never be placed and the the one cell could only expand one node. The tieBreaker artificially increases the cost of the predecessor to allow the successor being placed in the same cell.
# */
tie_breaker : 0.01
# range for goal test
goal_range: 0.1
# [#] --- A movement cost penalty for turning (choosing non straight motion primitives)
penalty_turning : 1.05
# [#] --- A movement cost penalty for reversing (choosing motion primitives > 2)
penalty_reverse : 1.2
# [#] --- A movement cost penalty for change of direction (changing from primitives < 3 to primitives > 2)
penalty_change_of_direction : 1.1
# steering angle , unit is deg
steering_angle: 5

# [m] --- The step size for the analytical solution (Dubin's shot) primarily relevant for collision checking
curve_step_size : 1


#  [m] --- The number of discretizations in heading
headings : 72
#  [m] --- The cell size of the 2D grid of the world
cell_size : 1

# **********************Smoother parameters*****************
max_iterations : 100000
#  the small number which will terminate loop if path difference smaller than this number.
epsilon : 1.0e-2
#maximum possible curvature of the non-holonomic vehicle
min_turning_radius : 7
#maximum distance to obstacles that is penalized
obsd_max : 2
# maximum distance for obstacles to influence the voronoi field
vor_obs_dmax : 2
#falloff rate for the voronoi field
alpha: 0.1
# weight for the obstacle term
weight_obstacle : 1
# weight for the voronoi term
weight_voronoi : 0.2
# weight for the curvature term
weight_curvature : 0
# weight for the smoothness term
weight_smoothness : 0.2
#weight for path length
weight_length : 0.2